name: 'Docker Build'

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      workingDir:
        required: true
        type: string

#These environment variables are used by the terraform azure provider to setup OIDD authenticate.
env:
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ROLE_ARN: ${{ vars.AWS_ROLE_ARN }}
  AWS_ROLE_SESSION_NAME: ${{ vars.ROLE_SESSION_NAME }}
  TF_VAR_ROLE_SESSION_NAME: ${{ vars.ROLE_SESSION_NAME }}
  WORKING_DIR: ${{ inputs.workingDir }}
  ENV: ${{ inputs.environment }}

jobs:
  docker-build:
    name: 'Docker Build'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    defaults:
      run:
        working-directory: ${{ inputs.workingDir }}
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v5

    -
        # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # OIDC Connection to AWS
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4.2.1
      with:
        audience: sts.amazonaws.com
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: ${{ env.AWS_ROLE_ARN }}
        role-session-name: ${{ env.TF_ROLE_SESSION_NAME }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push Docker image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REGISTRY_ALIAS: app
        REPOSITORY: "goog-${{ env.ENV }}-app"
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG